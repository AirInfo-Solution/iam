configurations {
    jpaModelGen
}

dependencies {
    compile project(":iam-common")

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.security:spring-security-core")
    compile("org.apache.commons:commons-lang3")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testRuntime("javax.el:el-api:2.2.4")
    testRuntime("org.glassfish.web:javax.el:2.2.4")
    testRuntime("com.h2database:h2:1.4.190")

    // Hibernate Metamodel Generator Libraries
    jpaModelGen("org.hibernate:hibernate-jpamodelgen")
}

task generateJPAMetaModel(type: JavaCompile, group: 'build', description: 'Generate JPA Meta Models') {
    source = sourceSets.main.java
    outputs.dir generatedSourcesJavaDir
    destinationDir = generatedSourcesJavaDir
    dependencyCacheDir = compileJava.dependencyCacheDir
    classpath = configurations.compile + configurations.jpaModelGen
    options.compilerArgs = [
            "-proc:only"
    ]
}

compileJava {
    dependsOn generateJPAMetaModel
}